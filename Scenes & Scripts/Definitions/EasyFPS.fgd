@SolidClass = worldspawn : "World Entity" [
]

@SolidClass = group : "Brush Group" [
]

@SolidClass = illusionary : "Non-colliding Brush" [
]

@SolidClass = physics : "Physics Brush" [
	mass(float) :  : "1"
	velocity(string) :  : "0 0 0"
]

@PointClass size(-8 -8 -8, 8 8 8) base(Targetname, Target) = signal : "Name of signal to call target." [
	signal_name(string) : "Name of signal to call on target." : ""
]

@PointClass size(-8 -8 -8, 8 8 8) base(Targetname, Target) = receiver : "Calls methods on target." [
	receiver_name(string) :  : ""
]

@PointClass size(-8 -8 -8, 8 8 8) base(Light) = light : "Invisible light source" [
	angle(float) : "Rotation Angle" : "0"
]

@SolidClass = button : "Interactive button brush." [
	axis(string) : "Direction of movement when pressed." : "0 -1 0"
	depth(float) : "How far to move along the axis when pressed." : "0.8"
	press_signal_delay(float) : "Seconds after press() is called, before emitting is own pressed signal." : "0"
	release_delay(float) : "Seconds after a physics body exits, before calling release()" : "0"
	release_signal_delay(float) : "Seconds after release() is called, before emitting is own released signal." : "0"
	speed(float) : "Delta multiplier for a lerp weight to move the button to its desired position." : "8"
	target(string) :  : ""
	trigger_signal_delay(float) : "Seconds after press() is called, before emitting the trigger signal." : "0"
]

@SolidClass = detail : "Detail Brush" [
]

@SolidClass = mover : "Moving brush." [
	rotation(string) :  : "0 0 0"
	scale(string) :  : "1 1 1"
	speed(float) :  : "1"
	translation(string) :  : "0 0 0"
	targetname(string) :  : ""
]

@SolidClass = rotate : "Rotating Brush" [
	axis(string) : "Rotation Axis" : "0 1 0"
	speed(float) : "Rotation Speed" : "360"
]

@SolidClass = trigger : "Trigger Volume" [
	target(string) :  : ""
]

@SolidClass = wall : "Basic entity brush." [
]
@PointClass size(-8 -8 -8, 8 8 8) base(Light) = light : "Invisible light source" [
	angle(float) : "Rotation Angle" : "0"
]

@SolidClass color(204 204 204) = [
]
